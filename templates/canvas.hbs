<form>

  <div class="form-group">
    <label> Name:</label>

    <div class="form-fields">
      <input id="charName" name="charName" value="" />

      &nbsp;<input type="checkbox" id="charFix" name="charFix" value="1" />
      Fix
    </div>
  </div>

  <div class="form-group">
    <label> Ancestries:</label>

    <div class="form-fields">
      <select id="ancestries">
        {{#each ancestries}}
          <option value="{{_id}}">{{name}}</option>
        {{/each}}
      </select>
      &nbsp;<input type="checkbox" id="ancFix" name="ancFix" value="1" />
      Fix
    </div>
  </div>

  <div class="form-group">
    <label> Heritage:</label>

    <div class="form-fields">
      <select id="heritage">

      </select>

    </div>
  </div>

  <div class="form-group">
    <label> Backgrounds:</label>

    <div class="form-fields">
      <select id="backgrounds">
        {{#each backgrounds}}
          <option value="{{_id}}">{{name}}</option>
        {{/each}}
      </select>
      &nbsp;<input type="checkbox" id="bacFix" name="bacFix" value="1" />
      Fix
    </div>
  </div>

  <div class="form-group">
    <label> Classes:</label>

    <div class="form-fields">
      <select id="classes">
        <option value="0">Commoner</option>
        {{#each classes}}
          <option value="{{_id}}">{{name}}</option>
        {{/each}}
      </select>
      &nbsp;<input type="checkbox" id="claFix" name="claFix" value="1" />
      Fix
    </div>
  </div>

  <button type="button" id="randomize">Randomize</button>
  <button type="button" id="save">Create NPC</button>
</form>

<script>
  var heritages = []; $(function () { // fix dropdown text $('#classes
  option').eq(1).remove(); $('#ancestries option').eq(0).remove();
  $('#backgrounds option').eq(0).remove(); // ancestries on change
  $("#ancestries").change(function (event) { // get heritages
  $.get("systems/pf2e/packs/heritages.db", function (data) { d =
  data.split(/(?:\\r\n|\r|\n)/g); let x = 0; var heritages = [];
  $(d).each(function (index) { // trim tmp = $.trim(this); if (tmp != '') { r =
  $.parseJSON(tmp); //ancestery data an = 'Any'; if (r.data.ancestry) { an =
  r.data.ancestry.name; } id = r._id; nm = r.name; heritages[x] = {};
  heritages[x]['id'] = id; heritages[x]['name'] = nm; heritages[x]['ancestry'] =
  an; x++; } }); race = $("#ancestries option:selected").text();
  $('#heritage').empty() $(heritages).each(function (index) { if (race ==
  this.ancestry || this.ancestry == 'Any') { // Pouplate 'heritage' dropdown
  $('#heritage').append($('<option></option>').val(this.id).html(this.name)); }
  }); // randomize heritage x = Math.floor(Math.random() * $('#heritage >
  option').length + 1); $('#heritage :nth-child(' + x + ')').prop('selected',
  true); // To select via index }); }); $("#randomize").click(function () {
  randomize(); }); $("#save").click(function () { FilePicker.browse('data',
  'modules/npc-generator/tokens').then((value) => { images =
  shuffle(value.files); ancestryText =
  $('#ancestries').children("option:selected").text().toLowerCase(); classText =
  $('#classes').children("option:selected").text(); console.log(classText);
  if(classText != 'Commoner') { image = images.findReg(ancestryText)[0]; } else
  { console.log(images); image = images.findReg(classText)[0]; } if (image ==
  '') { image = "systems/pf2e/icons/default-icons/mystery-man.svg"; }
  createActor(image); }); }); // fire randomize function randomize();
  $("#ancestries").trigger("change"); }); Array.prototype.findReg = function
  (match) { var reg = new RegExp(match); return this.filter(function (item) {
  return typeof item == 'string' && item.match(reg); }); } async function
  createActor(image) { var attr = { "str": 10, "con": 10, "dex": 10, "int": 10,
  "wis": 10, "cha": 10 }; jsnClass = ''; jsonAnc = ''; jsonBak = ''; jsonHer =
  ''; classId = $('#classes').children("option:selected").val(); ancestryId =
  $('#ancestries').children("option:selected").val(); backgroundId =
  $('#backgrounds').children("option:selected").val(); heritageId =
  $('#heritage').children("option:selected").val(); if(classId != 0) //
  commonners do not have a corresponding class (obviously) { let a = await
  game.packs.get("pf2e.classes").getDocument(classId) .then((r) => { jsnClass =
  r; classAttributes = jsnClass.data.data.keyAbility.value; abilityBoost =
  classAttributes[Math.floor(Math.random()*classAttributes.length)];
  attr[abilityBoost] +=2; }); } let b = await
  game.packs.get("pf2e.ancestries").getDocument(ancestryId) .then((r) => {
  jsonAnc = r; //boosts
  $(Object.values(jsonAnc.data.data.boosts)).each(function( index, value) {
  abilityBoost = value.value[Math.floor(Math.random()*value.value.length)];
  attr[abilityBoost] +=2; }); //flaws
  $(Object.values(jsonAnc.data.data.flaws)).each(function( index, value) {
  abilityBoost = value.value[Math.floor(Math.random()*value.value.length)];
  attr[abilityBoost] -=2; }); }); let c = await
  game.packs.get("pf2e.backgrounds").getDocument(backgroundId) .then((r) => {
  jsonBak = r; $(Object.values(jsonBak.data.data.boosts)).each(function( index,
  value) { abilityBoost =
  value.value[Math.floor(Math.random()*value.value.length)]; attr[abilityBoost]
  +=2; }); }); let d = await
  game.packs.get("pf2e.heritages").getDocument(heritageId) .then((r) => {
  jsonHer = r; }); let items = []; // build the item string if(classId != 0) {
  items = [jsnClass.data, jsonAnc.data, jsonBak.data, jsonHer.data]; } else {
  items = [jsonAnc.data, jsonBak.data, jsonHer.data]; } var personality =
  buildPersonality(); let actor = Actor.create({ name: $('#charName').val(),
  type: "character", img: image, items: items, data: { attributes: { hp: {
  "value": 30, "temp": 0, "details": "" } }, abilities: { "str": { "value":
  attr['str'] }, "dex": { "value": attr['dex'] }, "con": { "value": attr['con']
  }, "int": { "value": attr['int'] }, "wis": { "value": attr['wis'] }, "cha": {
  "value": attr['cha'] } }, details: { biography: { "backstory":
  buildPersonality() } } } }); } function generator(type) { var nm1 = ["", "",
  "", "", "", "b", "br", "c", "ch", "d", "dr", "f", "gr", "g", "h", "k", "kr",
  "l", "m", "n", "r", "s", "st", "str", "t", "th", "v", "z"]; var nm2 = ["a",
  "e", "i", "o", "u", "a", "e", "i", "o", "u", "a", "e", "i", "o", "u", "a",
  "e", "i", "o", "u", "a", "e", "i", "o", "u", "ui", "ea", "ei", "ie", "ai",
  "ua", "ei", "eo", "ia", "aa", "ee"]; var nm3 = ["b", "b", "br", "bl", "cl",
  "c", "c", "cr", "d", "d", "dl", "dr", "g", "g", "gr", "gn", "k", "k", "kr",
  "kn", "l", "l", "lc", "ll", "lm", "lt", "lw", "m", "m", "mn", "mr", "n", "n",
  "nc", "ndl", "nh", "nn", "ns", "nz", "r", "r", "rd", "rk", "rn", "rs", "rv",
  "ry", "s", "s", "st", "sk", "sr", "str", "t", "th", "tr", "tn", "t", "thm",
  "v", "v", "z", "z"]; var nm4 = ["", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "a", "e", "i", "o", "u", "a", "e",
  "i", "o", "u", "a", "e", "i", "o", "u", "a", "e", "i", "o", "u", "a", "e",
  "i", "o", "u", "ui", "ea", "ei", "ie", "ai", "ua", "ei", "eo", "ia", "aa",
  "ee"]; var nm5 = ["", "b", "b", "br", "bl", "cl", "c", "c", "cr", "d", "d",
  "dl", "dr", "g", "g", "gr", "gn", "k", "k", "kr", "kn", "l", "l", "lc", "ll",
  "lm", "lt", "lw", "m", "m", "mn", "mr", "n", "n", "nc", "ndl", "nh", "nn",
  "ns", "nz", "r", "r", "rd", "rk", "rn", "rs", "rv", "ry", "s", "s", "st",
  "sk", "sr", "str", "t", "th", "tr", "tn", "t", "thm", "v", "v", "z", "z"]; var
  nm7 = ["", "", "", "", "b", "c", "ck", "d", "k", "l", "ld", "ll", "lt", "n",
  "nd", "r", "s", "st", "y"]; var nm8 = ["", "", "", "", "", "br", "c", "d",
  "dh", "f", "gl", "gr", "gw", "k", "l", "m", "n", "ph", "r", "s", "sh", "t",
  "th", "tr", "v", "y"]; var nm9 = ["a", "e", "i", "o", "u", "a", "e", "i", "o",
  "u", "a", "e", "i", "o", "u", "a", "e", "i", "o", "u", "a", "e", "i", "o",
  "u", "ai", "io", "ei", "ea", "ae", "ia", "ue", "ua"]; var nm10 = ["br", "b",
  "dh", "d", "dd", "f", "ff", "fr", "g", "gh", "gg", "k", "l", "ll", "lm", "ln",
  "lv", "n", "nc", "nfr", "nn", "pp", "ph", "pr", "r", "rg", "rr", "s", "ss",
  "sh", "tt", "th", "v", "zk", "z"]; var nm11 = ["", "", "", "", "", "", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "a", "e", "i", "o", "u", "a",
  "e", "i", "o", "u", "a", "e", "i", "o", "u", "a", "e", "i", "o", "u", "a",
  "e", "i", "o", "u", "ai", "io", "ei", "ea", "ae", "ia", "ue", "ua"]; var nm12
  = ["", "br", "b", "dh", "d", "dd", "f", "ff", "fr", "g", "gh", "gg", "k", "l",
  "ll", "lm", "ln", "lv", "n", "nc", "nfr", "nn", "pp", "ph", "pr", "r", "rg",
  "rr", "s", "ss", "sh", "tt", "th", "v", "zk", "z"]; var nm14 = ["", "", "",
  "", "", "", "", "", "", "", "", "", "", "", "", "s", "n", "h", "l", "th"]; i =
  Math.floor(Math.random() * 10); { if (type === 1) { rnd =
  Math.floor(Math.random() * nm8.length); rnd2 = Math.floor(Math.random() *
  nm9.length); rnd3 = Math.floor(Math.random() * nm10.length); rnd6 =
  Math.floor(Math.random() * nm9.length); rnd7 = Math.floor(Math.random() *
  nm14.length); if (i < 5) { names = nm8[rnd] + nm9[rnd2] + nm10[rnd3] +
  nm9[rnd6] + nm14[rnd7]; } else { rnd4 = Math.floor(Math.random() *
  nm11.length); rnd5 = Math.floor(Math.random() * nm12.length); if (rnd4 < 20) {
  rnd5 = 0; rnd6 = 0; } else { while (rnd5 === 0) { rnd5 =
  Math.floor(Math.random() * nm12.length); } } names = nm8[rnd] + nm9[rnd2] +
  nm10[rnd3] + nm11[rnd4] + nm12[rnd5] + nm9[rnd6] + nm14[rnd7]; } } else { rnd
  = Math.floor(Math.random() * nm1.length); rnd2 = Math.floor(Math.random() *
  nm2.length); rnd3 = Math.floor(Math.random() * nm3.length); rnd6 =
  Math.floor(Math.random() * nm2.length); rnd7 = Math.floor(Math.random() *
  nm7.length); if (i < 5) { names = nm1[rnd] + nm2[rnd2] + nm3[rnd3] + nm2[rnd6]
  + nm7[rnd7]; } else { rnd4 = Math.floor(Math.random() * nm4.length); rnd5 =
  Math.floor(Math.random() * nm5.length); if (rnd4 < 40) { rnd5 = 0; rnd6 = 0; }
  else { while (rnd5 === 0) { rnd5 = Math.floor(Math.random() * nm5.length); } }
  names = nm1[rnd] + nm2[rnd2] + nm3[rnd3] + nm4[rnd4] + nm5[rnd5] + nm2[rnd6] +
  nm7[rnd7]; } } names = names.charAt(0).toUpperCase() + names.slice(1); return
  names; } } function handleFiles(files) { console.log(files); } function
  shuffle(array) { let currentIndex = array.length, randomIndex; // While there
  remain elements to shuffle... while (currentIndex != 0) { // Pick a remaining
  element... randomIndex = Math.floor(Math.random() * currentIndex);
  currentIndex--; // And swap it with the current element. [array[currentIndex],
  array[randomIndex]] = [ array[randomIndex], array[currentIndex]]; } return
  array; } function randomize() { // Ancestries if ($('#ancFix').is(":checked")
  == false) { x = Math.floor(Math.random() * $('#ancestries > option').length +
  1); $('#ancestries :nth-child(' + x + ')').prop('selected', true); // To
  select via index $("#ancestries").trigger("change"); } // Backgrounds if
  ($('#bacFix').is(":checked") == false) { x = Math.floor(Math.random() *
  $('#backgrounds > option').length + 1); $('#backgrounds :nth-child(' + x +
  ')').prop('selected', true); // To select via index } // Classes if
  ($('#claFix').is(":checked") == false) { x = Math.floor(Math.random() *
  $('#classes > option').length + 1); $('#classes :nth-child(' + x +
  ')').prop('selected', true); // To select via index } if
  ($('#charFix').is(":checked") == false) { $('#charName').val(generator()); } }
  function buildPersonality() { var personality = ''; personality
  +='<b>Personality</b>: ' + getPersonality() + '<BR>'; personality
  +='<b>Ideal</b>: ' + ideal() + '<BR>'; personality +='<b>Trait</b>: ' +
  trait() + '<BR>'; personality +='<b>Motivation</b>: ' + motivation() + '<BR>';
  personality +='<b>Quirk</b>: ' + quirk() + '<BR>'; personality +='<b>Flaw</b>:
  ' + flaw() + '<BR>'; return personality; } function getSeverity() { x=
  getRnd(10); if(x >= 1 && x <= 4) { return 'Mild' ;} if(x >= 5 && x <= 7) {
  return 'Moderate' ;} if(x >= 8 && x <= 9) { return 'Severe' ;} if(x >= 10) {
  return 'Overwealming' ;} } function getPersonality() { var x= getRnd(28);
  if(x== 1) { return 'Arrogant' + '(' + getSeverity() + ')' ;} if(x== 2) {
  return 'Modest' + '(' + getSeverity() + ')' ;} if(x== 3) { return 'Tactless' +
  '(' + getSeverity() + ')' ;} if(x== 4) { return 'Diplomatic' + '(' +
  getSeverity() + ')' ;} if(x== 5) { return 'Indifferent' + '(' + getSeverity()
  + ')' ;} if(x== 6) { return 'Compassionate' + '(' + getSeverity() + ')' ;}
  if(x== 7) { return 'Introverted' + '(' + getSeverity() + ')' ;} if(x== 8) {
  return 'Outgoing' + '(' + getSeverity() + ')' ;} if(x== 9) { return
  'Aesthetic' + '(' + getSeverity() + ')' ;} if(x== 10) { return
  'Matereialistic' + '(' + getSeverity() + ')' ;} if(x== 11) { return
  'Honorable' + '(' + getSeverity() + ')' ;} if(x== 12) { return 'Deceitful' +
  '(' + getSeverity() + ')' ;} if(x== 13) { return 'Brave' + '(' + getSeverity()
  + ')' ;} if(x== 14) { return 'Cowardly' + '(' + getSeverity() + ')' ;} if(x==
  15) { return 'Lazy' + '(' + getSeverity() + ')' ;} if(x== 16) { return
  'Driven' + '(' + getSeverity() + ')' ;} if(x== 17) { return 'Cheap' + '(' +
  getSeverity() + ')' ;} if(x== 18) { return 'Wastrel' + '(' + getSeverity() +
  ')' ;} if(x== 19) { return 'Pious' + '(' + getSeverity() + ')' ;} if(x== 20) {
  return 'Irreligious' + '(' + getSeverity() + ')' ;} if(x== 21) { return
  'Pessimist' + '(' + getSeverity() + ')' ;} if(x== 22) { return 'Optimist' +
  '(' + getSeverity() + ')' ;} if(x== 23) { return 'Suspicious' + '(' +
  getSeverity() + ')' ;} if(x== 24) { return 'Trusting' + '(' + getSeverity() +
  ')' ;} if(x== 25) { return 'Nervous' + '(' + getSeverity() + ')' ;} if(x== 26)
  { return 'Calm' + '(' + getSeverity() + ')' ;} if(x== 27) { return 'Tidy' +
  '(' + getSeverity() + ')' ;} if(x== 28) { return 'Messy' + '(' + getSeverity()
  + ')' ;} } function ideal() { var ideals = [ "Faith. I trust that my deity
  will guide my actions. I have faith that if I work hard, things will go
  well.", "Tradition. The ancient traditions of worship and sacrifice must be
  preserved and upheld.", "Charity. I always try to help those in need, no
  matter what the personal cost.", "Change. We must help bring about the changes
  the gods are constantly working in the world.", "Power. I hope to one day rise
  to the top of my faith's religious hierarchy.", "Aspiration. I seek to prove
  my self worthy of my god's favor by matching my actions against his or her
  teachings.", "Independence. I am a free spirit--no one tells me what to do.",
  "Fairness. I never target people who can't afford to lose a few coins.",
  "Charity. I distribute money I acquire to the people who really need it.",
  "Creativity. I never run the same con twice.", "Friendship. Material goods
  come and go. Bonds of friendship last forever.", "Aspiration. I'm determined
  to make something of myself.", "Honor. I don't steal from others in the
  trade.", "Freedom. Chains are meant to be broken, as are those who would forge
  them.", "Charity. I steal from the wealthy so that I can help people in
  need.", "Greed. I will do whatever it takes to become wealthy.", "People. I'm
  loyal to my friends, not to any ideals, and everyone else can take a trip down
  the Styx for all I care.", "Redemption. There's a spark of good in everyone.",
  "Beauty. When I perform, I make the world better than it was.", "Tradition.
  The stories, legends, and songs of the past must never be forgotten.",
  "Creativity. The world is in need of new ideas and bold action.", "Greed. I'm
  only in it for the money and fame.", "People. I like seeing the smiles on
  people's faces when I perform. That's all that matters.", "Honesty. Art should
  reflect the soul; it should come from within and reveal who we really are.",
  "Respect. People deserve to be treated with dignity and respect.", "Fairness.
  No one should get preferential treatment before the law, and no one is above
  the law.", "Freedom. Tyrants must not be allowed to oppress the people.",
  "Might. If I become strong, I can take what I want--what I deserve.",
  "Sincerity. There's no good pretending to be something I'm not.", "Destiny.
  Nothing and no one can steer me away from my higher calling.", "Community. It
  is the duty of all civilized people to strengthen the bonds of community and
  the security of civilization.", "Generosity. My talents were given to me so
  that I could use them to benefit the world.", "Freedom. Everyone should be
  free to pursue his or her livelihood.", "Greed. I'm only in it for the
  money.", "People. I'm committed to the people I care about, not to ideals.",
  "Aspiration. I work hard to be the best there is at my craft.", "Greater Good.
  My gifts are meant to be shared with all, not used for my own benefit.",
  "Logic. Emotions must not cloud our sense of what is right and true, or our
  logical thinking.", "Free Thinking. Inquiry and curiosity are the pillars of
  progress.", "Power. Solitude and contemplation are paths toward mystical or
  magical power.", "Live and Let Live. Meddling in the affairs of others only
  causes trouble.", "Self-Knowledge. If you know yourself, there're nothing left
  to know.", "Respect. Respect is due to me because of my position, but all
  people regardless of station deserve to be treated with dignity.",
  "Responsibility. It is my duty to respect the authority of those above me,
  just as those below me must respect mine.", "Independence. I must prove that I
  can handle myself without the coddling of my family.", "Power. If I can attain
  more power, no one will tell me what to do.", "Family. Blood runs thicker than
  water.", "Noble Obligation. It is my duty to protect and care for the people
  beneath me.", "Change. Life is like the seasons, in constant change, and we
  must change with it.", "Greater Good. It is each person's responsibility to
  make the most happiness for the whole tribe.", "Honor. If I dishonor myself, I
  dishonor my whole clan.", "Might. The strongest are meant to rule.", "Nature.
  The natural world is more important than all the constructs of civilization.",
  "Glory. I must earn glory in battle, for myself and my clan.", "Knowledge. The
  path to power and self-improvement is through knowledge.", "Beauty. What is
  beautiful points us beyond itself toward what is true.", "Logic. Emotions must
  not cloud our logical thinking.", "No Limits. Nothing should fetter the
  infinite possibility inherent in all existence.", "Power. Knowledge is the
  path to power and domination.", "Self-improvement. The goal of a life of study
  is the betterment of oneself.", "Respect. The thing that keeps a ship together
  is mutual respect between captain and crew.", "Fairness. We all do the work,
  so we all share in the rewards.", "Freedom. The sea is freedom--the freedom to
  go anywhere and do anything.", "Master. I'm a predator, and the other ships on
  the sea are my prey.", "People. I'm committed to my crewmates, not to
  ideals.", "Aspiration. Someday I'll own my own ship and chart my own
  destiny.", "Greater Good. Our lot is to lay down our lives in defense of
  others.", "Responsibility. I do what I must and obey just authority.",
  "Independence. When people follow orders blindly they embrace a kind of
  tyranny.", "Might. In life as in war, the stronger force wins.", "Ideals
  aren't worth killing for or going to war for.", "Nation. My city, nation, or
  people are all that matter.", "Respect. All people, rich or poor, deserve
  respect.", "Community. We have to take care of each other, because no one else
  is going to do it.", "Change. The low are lifted up, and the high and mighty
  are brought down. Change is the nature of things.", "Retribution. The rich
  need to be shown what life and death are like in the gutters.", "People. I
  help people who help me--that's what keeps us alive.", "Aspiration. I'm going
  to prove that I'm worthy of a better life." ]; return
  ideals[getRnd(ideals.length)-1]; } function trait() { traits = ["is very quick
  to trust other people", "is very slow to trust other people", "is very
  stubborn", "is very optimistic", "is very pessimistic", "is an example of
  modesty", "is conceited", "is very self-confident", "has no self-confidence",
  "rarely speaks", "is very talkative", "only talks in whispers", "only talks
  loudly", "is very generous", "is very greedy", "is materialistic", "is
  non-materialistic", "is very cowardly", "is very courageous, to a fault",
  "doesn't care about risks or odds", "judges people by their actions, not their
  words", "takes everything at face-value", "is a perfectionist", "is lazy",
  "always has to be doing something", "can't stand laziness", "can't keep a
  secret", "is very good at keeping secrets", "acts on impulse", "has an even
  temper", "would rather act than talk or think", "will ponder the pros and cons
  before making a decision", "gets bored easily", "has a highly variable mood",
  "is bipolar", "is always calm", "is very patient", "is very impatient",
  "rarely thinks ahead", "is always very calm", "is always prepared", "is always
  very excited", "always has a backup plan", "is very focused", "is very
  cynical", "is a hopeless romantic", "uses sarcasm and insults commonly",
  "always gets straight to the point", "is very direct", "changes subject very
  often", "is always ironic", "is very selfish", "will always prioritize their
  needs above others'", "will always prioritize the needs of other people, even
  to their detriment", "shows very little empathy towards others", "is very
  empathic towards others", "is always ready to help others", "is polite and
  respectful", "is a pacifist", "is kind and generous", "easily holds grudges",
  "is very benevolent", "is prone to violence", "is a very good diplomat and
  always works towards resolution of conflict", "is very good at defusing
  tensions", "often spies on other people", "is always fair", "hates fair play",
  "constantly looks for a loophole" ]; return traits[getRnd(traits.length)-1]; }
  function motivation() { motivations =["Greed","Power","Ambition","Desire for
  acceptance","Curiosity","Independence","Order","Social contact","Social
  status","Justice","Revenge","Vengeance","Hatred","Dishonor","Pride","Lust","Jealousy","Loyalty","Honor","Obedience","Unfulfillment","A
  need to improve inequality","Desire","Failure","Survival","Hope for the
  future","Love","Cowardice","Family","Reputation","Sense of
  accomplishment","Basic needs","Necessity","Personal pride","A desire to change
  the world around them","Tales of old heroes","A family legacy","Past
  mistakes","Stubbornness","Wealth & Status","Prestige","Competitive
  spirit","Personal goals or dreams","Fear of death","Fear of pain","Fear of
  humiliation","Fear of rejection","Fear of loss","Fear of regret","Fear of
  shame"]; return motivations[getRnd(motivations.length)-1]; } function quirk()
  { quirks = ["has a constant wanderlust and is unable to live at the same place
  for more than a few months", "doesn't like change", "likes to speak in
  proverbs", "misquotes proverbs", "falls in and out of love easily", "believes
  in soulmates and destiny", "is always joking, even at innapropriate times",
  "has a joke for every situation", "doesn't like listening to jokes", "is
  constantly flattering people", "is a compulsive gambler", "is an alcoholic",
  "never lies", "constantly lies", "believes in whatever deity is most helpful
  to them at any given moment", "is a kleptomaniac", "always does what they're
  told not to", "gets very mad at any semblance of an insult", "has a story for
  everything", "sees insults as an art", "is a cross-dresser", "runs everywhere
  instead of walking", "dreams of becoming rich and famous", "admires the local
  lord", "knows all the gossip around town", "is always sharing their wisdom",
  "believes in destiny", "argues about everything", "spaces out often, lost in
  thought", "makes anyone they speak to feel like the most important person in
  the world", "cares about their friends and will do anything for them", "reads
  every book they comes across", "loves discovering new mysteries and solving
  them", "wants to know every side of a story before expressing an opinion", "is
  paranoid", "works hard to play hard afterwards", "stretches the truth to tell
  a good story", "is haunted by horrible memories", "has lost many friends",
  "has a crude sense of humour", "likes finding direct solutions to problems",
  "always carries food in their pockets", "always asks invasive questions", "is
  a local sports champion", "laughs at inappropriate times", "doesn't like their
  current profession, has always dreamed of becoming a
  {{profession}}", "believes that all
  {{race}}
  are planning to destroy the world", "owns a box full of dead animals", "is
  allergic to apples", "believes that they are related to the god
  {{god}}", "lies poorly on purpose", "secretly wants to become the ruler of the
  city", "has a pet insect", "likes to swim", "has a beautiful singing voice",
  "often thinks aloud", "cannot tolerate rough living conditions", "uses long
  words to sound smart", "gives money to the poor", "disregards poorer people",
  "only dresses in very expensive clothes", "always wears a fancy hat", "loves
  partying", "uses a beautiful walking cane", "wears a lot of cheap jewelry",
  "wears a lot of beautiful jewelry", "wears fancy spectacles", "likes to know
  how things work", "considers everyone else as idiots", "has very little
  practical experience", "sees divine omens in everything", "talks aloud to
  their god", "quotes sacred texts", "misquotes sacred texts", "is very
  intolerant towards other faiths", "carries blessed water everywhere", "spends
  a lot of time studying other religions", "carries out a complicated religious
  ritual every morning", "will frequently pray at inappropriate moments", "tries
  to convert everyone they meet", "idolizes a religious hero", "is disgusted by
  human architecture", "feels more comfortable while surrounded by nature", "is
  secretly captivated by dwarves", "has a deep knowledge of ancient secrets",
  "has a deep knowledge of ancient magic", "knows the name of all the local
  plants", "will only speak common if absolutely forced to", "never knows the
  current time and date", "paints exquisite paintings in their spare time",
  "paints horrendous paintings in their spare time", "uses terms from a
  different language as they speak", "is always late", "seeks extreme mastery of
  what they do", "sees other races as inferior", "keeps all of their promises",
  "despises fear and cowardice", "treats adversaries/enemies/criminals with
  respect", "values honor above all", "has a secret dragon master", "always has
  a good ale at hand", "feels ill at ease in open spaces", "is more comfortable
  underground", "constantly hums old dwarven songs", "misses the world as they
  used to know it", "is strongly rooted within tradition", "will take on any bet
  while drinking", "is always covered in dirt", "has almost never been above
  ground", "cannot take a halfling seriously", "harbours a deep hatred of orcs
  and goblins", "has gemcutting as a hobby", "is secretly captivated by elves",
  "makes the best out of any situation", "is always tinkering in their free
  time", "has a solution for everything", "explains everything in great detail",
  "has a fascination with explosions", "never stops talking", "complicates
  simple situations", "is always scribbling notes", "keeps a very precise
  journal", "always has plans for a new invention", "has a detailed map of
  everywhere they have been to", "loves shiny objects", "has a fascination with
  alchemy", "is fascinated by magic and its history", "is way too curious",
  "talks so fast that they are very difficult to understand", "tries to stay
  home as much as possible", "usually tries not to get noticed", "is very shy",
  "has several pet animals", "rides a poney everywhere", "always has a good joke
  to tell", "knows all there is to know about farms", "lived their early years
  in a caravan", "never goes anywhere without their friend", "smiles
  constantly", "values their community very highly", "spends every morning
  training", "will never say no to a duel", "can see an opening in any defense",
  "sees fighting as a solution to any problem", "judges people on their
  fighting/karate skills", "used to be bullied as a child and learned to fight
  so that it wouldn't happen again", "always obeys their elders/superiors",
  "always has a battle story to tell", "likes animals more than people", "is a
  vocal vegetarian", "is a vegetarian", "often talks to plants", "feels
  uncomfortable in a urban setting", "is a very proficient herbalist", "can make
  a potion out of anything", "sleeps best in a tree", "can always find their way
  in the woods", "loves eating fresh aliments", "can tame any animal", "will
  never take a life if given the choice", "feels uncomfortable in a rich
  setting", "frequently misuses long words to sound smarter", "is totally
  oblivious to etiquette and social expectations", "enjoys tavern brawls", "has
  no concept of propriety", "always has time to help others", "sleeps fully
  dressed, ready to run", "always knows where to hide", "always eats like it's
  their last meal", "shares everything they own", "never bathes", "only wears
  red (or some other color) clothing", "never takes off their shoes", "never
  wears footwear", "always wears a mask", "never sleeps in a bed", "never sits
  on a chair", "speaks only in riddles", "doesn't tolerate nicknames", "has an
  imaginary friend", "knows thieve's cant", "often spaces out and stares into
  the distance", "is always chewing something", "bites their fingernails",
  "twirls their hair or strokes their beard", "addicted to substance", "hates
  magic", "kleptomaniac", "obsessed with magic", "hatred/fear of killing", "bad
  manners/vulgar", "expensive taste", "leaves no one behind", "too proud to ask
  for help", "fears the gods", "doesn't know the common tongue",
  "superstitious", "never refuses a challenge/extremely competitive", "obsessed
  with a god", "has an injury", "receives visions (insane)", "owes a large
  debt", "fugitive", "haunted", "fear of common hazard (fire, water, heights,
  animals, darkness, insects, magic)", "hunted by something/believes they are
  being hunted by something", "moral code", "secretly evil (and must keep it a
  secret)", "magical curse (inhibits certain type of interaction, action, or
  activity)", "prophesied to die soon by a fortune teller and believes it", "has
  a terrible secret", "servant to a hidden master", "has a great past sorrow",
  "multiple personalities", "irresponsible with money", "socially inept",
  "trusts nobody", "dormant behavioral conditioning program", "traditionalist",
  "apologist/condoning", "conspiracy theorist", "responsible for a terrible
  event", "blames something or someone for a great sorrow", "naive", "breaks
  hearts", "faints at the sight of blood", "collector", "in love with someone
  horrible or forbidden", "obsessed with fitness", "terrible liar", "no sense of
  smell", "illiterate", "extremely shy", "obsessed with justice",
  "overconfident/arrogant", "self-deprecating", "plagued by nightmares", "fiery
  temper/anger issues", "parties too hard/over-indulgent", "trusting", "easily
  seduced", "hypochondriac", "compulsive liar", "oblivious", "extremely
  greedy/will do anything for money", "chronic illness", "fears building close
  relationships", "thrill-seeker", "social conformist", "authority issues",
  "obsessed with personal hygiene", "was involved in a huge scandal", "attracts
  a lot of attention/very large", "notorious", "extremely vain",
  "self-righteous", "altruistic", "avenging", "devoted to one of the player
  characters", "pretender/heir to distant throne or ruined kingdom",
  "pyromaniac", "impoverished noble", "psychological trauma", "dependent upon an
  item for an ability score/incredibly weak without a certain item", "hears
  voices", "suffers from chronic pain (magical or non-magical)", "no
  patience/impulsive", "constantly seeks out fortune tellers, palm readers,
  tarot card readers, good luck charms", "paranoid", "running from the past",
  "pet collector/animal-lover", "taken a vow of silence", "pack rat/hoarder",
  "needs medicine to live", "absent-minded (randomly forgets/loses things)",
  "addicted to gambling", "prone to jealousy of others' success", "contempt for
  nobility", "only eats a certain food", "contempt for the comforts of
  civilization", "needs certain conditions to sleep (certain item(s), can't
  sleep alone, etc.)", "vendetta against type of monster", "romanticizes
  everything", "reads signs and omens", "fears magic", "is always muttering
  about something", "is constantly eating", "is constantly joking", "is
  constantly smiling", "has a strange theory about the world. Wants to tell
  everyone about it.", "movies like a cat", "is always overdressed for the
  occasion", "wears contradicting religious symbols", "prays to their god
  whenever they have a moment of free time", "is always reading something",
  "made a pact with a daemon as a child", "is actually a magic bear that can
  talk", "has a fay best friend", "can see ghosts", "were born blind but uses
  magic to see", "is actually a changeling", "belongs to another race and uses a
  magic ring to hide", "tried for years to teach themselves magic with no
  available", "can hear the thoughts of others", "used magic to make themselves
  forget their old life", "has a guardian angle", "has trapped a natural spirit
  and uses its powers for their benefit", "uses an illusion bracelet to look
  more attractive than they are", "every night they have turbulent, bloody and
  cryptic visions", "sees someone else in the mirror", "understands animals",
  "used a love potion on their current spouse/lover", "carries out dark rituals
  in an attempt to give themselves power", "is the result of a magical
  experiment", "remembers a previous life", "uses magic to rejuvenate
  themselves", "has an eye in their belly button", "Possessed by quirky demon"
  ]; return quirks[getRnd(quirks.length)-1]; } function flaw() { flaws = ["I
  judge others harshly, and myself even more severely.", "I put too much trust
  in those who wield power within my temple's hierarchy.", "My piety sometimes
  leads me to blindly trust those that profess faith in my god.", "I am
  inflexible in my thinking.", "I am suspicious of strangers and suspect the
  worst of them.", "Once I pick a goal, I become obsessed with it to the
  detriment of everything else in my life.", "I can't resist a pretty face.",
  "I'm always in debt. I spend my ill-gotten gains on decadent luxuries faster
  than I bring them in.", "I'm convinced that no one could ever fool me in the
  way I fool others.", "I'm too greedy for my own good. I can't resist taking a
  risk if there's money involved.", "I can't resist swindling people who are
  more powerful than me.", "I hate to admit it and will hate myself for it, but
  I'll run and preserve my own hide if the going gets tough.", "When I see
  something valuable, I can't think about anything but how to steal it.", "When
  faced with a choice between money and my friends, I usually choose the
  money.", "If there's a plan, I'll forget it. If I don't forget it, I'll ignore
  it.", "I have a 'tell' that reveals when I'm lying.", "I turn tail and run
  when things go bad.", "An innocent person is in prison for a crime that I
  committed. I'm okay with that.", "I'll do anything to win fame and renown.",
  "I'm a sucker for a pretty face.", "A scandal prevents me from ever going home
  again. That kind of trouble seems to follow me around.", "I once satirized a
  noble who still wants my head. It was a mistake that I will likely repeat.",
  "I have trouble keeping my true feelings hidden. My sharp tongue lands me in
  trouble.", "Despite my best efforts, I am unreliable to my friends.", "The
  tyrant who rules my land will stop at nothing to see me killed.", "I'm
  convinced of the significance of my destiny, and blind to my shortcomings and
  the risk of failure.", "The people who knew me when I was young know my
  shameful secret, so I can never go home again.", "I have a weakness for the
  vices of the city, especially hard drink.", "Secretly, I believe that things
  would be better if I were a tyrant lording over the land.", "I have trouble
  trusting in my allies.", "I'll do anything to get my hands on something rare
  or priceless.", "I'm quick to assume that someone is trying to cheat me.", "No
  one must ever learn that I once stole money from guild coffers.", "I'm never
  satisfied with what I have--I always want more.", "I would kill to acquire a
  noble title.", "I'm horribly jealous of anyone who outshines my handiwork.
  Everywhere I go, I'm surrounded by rivals.", "Now that I've returned to the
  world, I enjoy its delights a little too much.", "I harbor dark bloodthirsty
  thoughts that my isolation failed to quell.", "I am dogmatic in my thoughts
  and philosophy.", "I let my need to win arguments overshadow friendships and
  harmony.", "I'd risk too much to uncover a lost bit of knowledge.", "I like
  keeping secrets and won't share them with anyone.", "I secretly believe that
  everyone is beneath me.", "I hide a truly scandalous secret that could ruin my
  family forever.", "I too often hear veiled insults and threats in every word
  addressed to me, and I'm quick to anger.", "I have an insatiable desire for
  carnal pleasures.", "In fact, the world does revolve around me.", "By my words
  and actions, I often bring shame to my family.", "I am too enamored of ale,
  wine, and other intoxicants.", "There's no room for caution in a life lived to
  the fullest.", "I remember every insult I've received and nurse a silent
  resentment toward anyone who's ever wronged me.", "I am slow to trust members
  of other races.", "Violence is my answer to almost any challenge.", "Don't
  expect me to save those who can't save themselves. It is nature's way that the
  strong thrive and the weak perish.", "I am easily distracted by the promise of
  information.", "Most people scream and run when they see a demon. I stop and
  take notes on its anatomy.", "Unlocking an ancient mystery is worth the price
  of a civilization.", "I overlook obvious solutions in favor of complicated
  ones.", "I speak without really thinking through my words, invariably
  insulting others.", "I can't keep a secret to save my life, or anyone
  else's.", "I follow orders, even if I think they're wrong.", "I'll say
  anything to avoid having to do extra work.", "Once someone questions my
  courage, I never back down no matter how dangerous the situation.", "Once I
  start drinking, it's hard for me to stop.", "I can't help but pocket loose
  coins and other trinkets I come across.", "My pride will probably lead to my
  destruction.", "The monstrous enemy we faced in battle still leaves me
  quivering with fear.", "I have little respect for anyone who is not a proven
  warrior.", "I made a terrible mistake in battle that cost many lives--and I
  would do anything to keep that mistake secret.", "My hatred of my enemies is
  blind and unreasoning.", "I obey the law, even if the law causes misery.",
  "I'd rather eat my armor than admit when I'm wrong.", "If I'm outnumbered, I
  always run away from a fight.", "Gold seems like a lot of money to me, and
  I'll do just about anything for more of it.", "I will never fully trust anyone
  other than myself.", "I'd rather kill someone in their sleep than fight
  fair.", "It's not stealing if I need it more than someone else.", "People who
  don't take care of themselves get what they deserve." ]; return
  flaws[getRnd(flaws.length)-1]; } function getRnd(n) { return
  Math.floor((Math.random() * n) + 1); }

</script>